/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 ../public/fit_guy.glb 
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export const TYPE = {
  Idle: 'Idle',
  Listening: 'Listening',
  Push_ups: 'Push_ups',
  Rhomboid_pulls: 'Rhomboid_pulls',
  Squats: 'Squats',
  some: '[Запас Дій]',
}

export function Model(props) {
  const group = useRef()
  // const { nodes, materials, animations } = useGLTF('/fit_guy.glb')
  const { scene, animations } = useGLTF('/fit_guy.glb', true)
  const { actions, mixer } = useAnimations(animations, group)
  console.log("🚀 ~ file: Fit_guy.jsx:14 ~ Model ~ actions:", actions);
  useEffect(() => {
    console.log("🚀 ~ file: 65546454546.jsx:25 ~ useEffect ~ type:", props.type);
    props.typePrev && actions[props.typePrev].stop()
    actions[props.type].play()
  }, [mixer, props.type, props.typePrev])
  
  return <primitive ref={group} object={scene} dispose={null} position={props.position} />
  // return (
  //   <group ref={group} {...props} dispose={null}>
  //     <group name="Scene">
  //       <group name="Арматура">
  //         <primitive object={nodes.Bone24} />
  //         <skinnedMesh name="Body" geometry={nodes.Body.geometry} material={materials.Skin} skeleton={nodes.Body.skeleton} />
  //         <skinnedMesh name="Hair" geometry={nodes.Hair.geometry} material={materials.Hair} skeleton={nodes.Hair.skeleton} />
  //         <skinnedMesh name="Shorts" geometry={nodes.Shorts.geometry} material={materials.Shorts} skeleton={nodes.Shorts.skeleton} />
  //         <skinnedMesh name="T-shirt" geometry={nodes['T-shirt'].geometry} material={materials['T-shirt']} skeleton={nodes['T-shirt'].skeleton} />
  //       </group>
  //     </group>
  //   </group>
  // )
}

useGLTF.preload('/fit_guy.glb')
